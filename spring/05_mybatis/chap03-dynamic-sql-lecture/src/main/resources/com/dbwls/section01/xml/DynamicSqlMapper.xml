<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbwls.section01.xml.DynamicSqlMapper">
    <select id="selectMenuByPrice" resultType="com.dbwls.common.MenuDTO">
        SELECT
        menu_code
        , menu_name
        , menu_price
        , category_code
        , orderable_status
        FROM tbl_menu
        WHERE orderable_status = 'Y'
        <!-- 테스트 안에 조건을 넣으면 된다.-->
        <!-- gte : 이상, lte: 이하, gt : 초과, lt : 미만 -->
        <!-- 0원 이상 10000원 이하면 입력된 가격보다 낮은 가격의 제품을 리턴함 -->
        <if test="price gte 0 and price lte 10000">
            <!-- CDATA 섹션은 XML에서 특수 문자(예: <, > 등)를 포함한 텍스트를 처리 -->
            <![CDATA[
            AND menu_price < #{ price }
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND menu_price BETWEEN 10000 AND #{ price }
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND menu_price BETWEEN 20000 AND #{ price }
        </if>
        <if test="price gt 30000">
            AND menu_price BETWEEN 30000 AND #{ price }
        </if>
        ORDER BY menu_code
    </select>

    <select id="searchMenu" resultType="com.dbwls.common.MenuDTO">
        SELECT
        menu_code
        , menu_name
        , menu_price
        , category_code
        , orderable_status
        FROM tbl_menu
        <if test="condition == 'category'">
            JOIN tbl_category USING (category_code)
        </if>
        WHERE orderable_status = 'Y'
        <if test="condition == 'name'">
            AND menu_name LIKE CONCAT('%', #{ value }, '%')
        </if>
        <if test="condition == 'category'">
            AND category_name LIKE CONCAT('%', #{ value }, '%')
        </if>
        ORDER BY menu_code
    </select>

    <select id="searchMenuBySupCategory" resultType="com.dbwls.common.MenuDTO">
        SELECT
        menu_code
        , menu_name
        , menu_price
        , category_code
        , orderable_status
        FROM tbl_menu
        WHERE orderable_status = 'Y'
        <choose>
            <!-- if/case -->
            <when test="value == '식사'">
                AND category_code IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND category_code IN (8, 9, 10)
            </when>
            <!-- else/default -->
            <otherwise>
                AND category_code IN (11, 12)
            </otherwise>
        </choose>
        ORDER BY menu_code
    </select>

    <select id="searchMenuByRandomMenuCode" resultType="com.dbwls.common.MenuDTO">
        SELECT
        menu_code
        , menu_name
        , menu_price
        , category_code
        , orderable_status
        FROM tbl_menu
        WHERE menu_code IN
        <!-- IN (a,b,c) 이런식으로 작성되어야 하기 때문에 -->
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator="," close=")">
            #{ menuCode }
        </foreach>

    </select>

    <select id="searchMenuByNameOrCategory" resultType="com.dbwls.common.MenuDTO">
        SELECT
        menu_code
        , menu_name
        , menu_price
        , category_code
        , orderable_status
        FROM tbl_menu
        <!--
        문제 상황 : 전달 되는 값에 따라 where 문자만 남거나 and 문자로 시작하는 등의 구문 오류가 발생할 수 있다.
        <if test="nameValue != null">
            WHERE menu_name LIKE CONCAT('%', #{ nameValue }, '%')
        </if>
        <if test="categoryValue != null">
            AND category_code = #{ categoryValue }
        </if>
        -->
        <!-- 해결 방법 1. <where> 태그 사용 -->
        <!-- <where>
            <if test="nameValue != null">
                menu_name LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND category_code = #{ categoryValue }
            </if>
        </where> -->
        <!-- 해결 방법 2. <trim> 태그 사용 -->
        <!-- 만약 요소가 있다면 앞에 WHERE을 붙여준다.
         그리고, 구문의 시작이 AND 또는 OR이면 해당 문자를 떼고 WHERE를 붙여 쿼리를 완성-->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="nameValue != null">
                menu_name LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND category_code = #{ categoryValue }
            </if>
        </trim>
    </select>

    <update id="updateMenu">
        UPDATE tbl_menu
        <!-- 문제 상황 : SET 구문이 남거나 , 가 앞뒤로 붙어 구문 오류가 발생할 수 있다. -->
        <!-- 해결 방법 1. <set> 태그 사용 -->
        <!-- <set>
            <if test="menuName != null and menuName !=''">
                menu_name = #{ menuName },
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                category_code = #{ categoryCode },
            </if>
            <if test="orderableStatus != null and orderableStatus !=''">
                orderable_status = #{ orderableStatus }
            </if>
        </set> -->
        <!-- 해결 방법 2. <trim> 태그 사용 -->
        <!-- 구문의 마지막에 ,가 오면 제거!-->
        <trim prefix="SET" suffixOverrides=",">
            <if test="menuName != null and menuName !=''">
                menu_name = #{ menuName },
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                category_code = #{ categoryCode },
            </if>
            <if test="orderableStatus != null and orderableStatus !=''">
                orderable_status = #{ orderableStatus }
            </if>
        </trim>
        WHERE menu_code = #{ menuCode }
    </update>
</mapper>